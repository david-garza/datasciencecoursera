con <- url("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "rb")
storm <- read.csv(con)
storm <- read.csv("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2")
View(storm)
rm(storm)
rm(con)
storm <- read.table("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2")
storm <- read.csv(unz("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2","stormdata.csv")
storm <- read.csv(unz("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2","stormdata.csv")
storm <- read.csv(unz("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2","stormdata.csv"))
storm <- read.csv(bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"))
storm <- read.table(bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"))
storm <- read.csv(bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "stormdata.csv"))
con <- bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2")
con
storm <- read.csv(con)
storm <- read.csv("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2")
con <- bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "r")
con <- bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "rb")
con <- bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2")
View(storm)
storm <- read.csv(file = con)
con <- bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2", "rb")
rm(storm)
rm(con)
storm <- read.table(bzfile("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"))
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2","stromdata.csv.bz2")
strom <- read.csv(bzfile("stromdata.csv.bz2"))
View(strom)
rm(strom)
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2","data.csv.bz2")
data <- read.csv(bzfile("data.csv.bz2"))
View(data)
fatality <- tapply(data$FATALITIES, data$EVTYPE, sum)
fatality
sort(fatality)
head(sort(fatality))
fatality <- sort(fatality, decreasing = TRUE)
head(fatality)
fatality_10 <- fatality[1:10]
fatality_10
injury <- tapply(data$INJURIES, data$EVTYPE, sum)
injury <- sort(injury, decreasing = TRUE)
injury_10 <- injury[1:10]
injury_10
names(fatality_10)
barplot(fatality_10)
barplot(fatality_10[1:5])
barplot(fatality_10[1:5],cex.lab = 0.5)
barplot(fatality_10[1:5],cex.xlab = 0.5)
barplot(fatality_10[1:5],cex.axis = 2.0)
barplot(fatality_10,cex.names = 2.0)
barplot(fatality_10,cex.names = .5)
barplot(fatality_10,cex.names = .5, xpd = FALSE)
barplot(fatality_10,cex.names = .5, xpd = TRUE)
barplot(fatality_10,cex.names = .75)
barplot(fatality_10,cex.names = .5, col = "red")
barplot(fatality_10,cex.names = .5, col = "red", main = "Top 10 Weather Events by Fatality")
barplot(injury_10,cex.names = .5, col = "orange", main = "Top 10 Weather Events by Injury")
barplot(injury_10,cex.names = .25, col = "orange", main = "Top 10 Weather Events by Injury")
barplot(injury_10,cex.names = .45, col = "orange", main = "Top 10 Weather Events by Injury")
barplot(injury_10,cex.names = .5, col = "orange", main = "Top 10 Weather Events by Injury")
cost <- tapply(data$PROPDMG, data$EVTYPE, sum)
cost <- sort(cost, decreasing = TRUE)
cost_10 <- cost[1:10]
barplot(cost_10,cex.names = .5, col = "green", main = "Top 10 Weather Events by Cost"
barplot(cost_10,cex.names = .5, col = "green", main = "Top 10 Weather Events by Cost")
barplot(cost_10,cex.names = .5, col = "green", main = "Top 10 Weather Events by Cost")
barplot(fatality_10,cex.names = .5, col = "red", main = "Top 10 Weather Events by Fatality")
barplot(injury_10,cex.names = .5, col = "orange", main = "Top 10 Weather Events by Injury")
barplot(cost_10,cex.names = .5, col = "green", main = "Top 10 Weather Events by Cost")
setwd("~/Programming/datasciencecoursera")
ls
ls()
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
0
12/52
2/51
.5*.8*1.6
.64
mypdf
integrate(mypdf,0,1.6)
1.0
sqrt(2)
.997*.001
(1-.997)*(1-.001)
(1-.985)*(1-.001)
.000997/(.000997-0.014985)
.000997/(.000997-0.014985*.999)
.000997/(.000997+0.014985*.999)
.000997/(.000997+0.015*.999)
(1+2+3+4+5+6)*(1/6)
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5*(edh+edl)
integrate(myfunc,0,2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
exit
quit
q
setwd("~/Programming/datasciencecoursera")
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
x*p
sum(x*P)
sum(x*p)
(.75*.30)/(0.75*.30+(1-.52)*(1-.30))
swirl()
library("swirl", lib.loc="~/R/win-library/3.3")
swirl()
dice_sqr
ex2_fair <- dice_sqr*dice_fair
ex2_fair <- sum(dice_fair * dice_sqr)
ex2_fair-sqr(3.5)
ex2_fair-square(3.5)
ex2_fair-3.5^2
sum(dice_sqr*dice_high)-edh*2
sum(dice_sqr*dice_high)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
library("swirl", lib.loc="~/R/win-library/3.3")
swirl()
swirl()
swirl()
choose(5,3)*0.8^3*(.2)^2
choose(5,3)*(.8)^3*(.2)^(5-3)+choose(5,4)*(.8)^4*(.2)^(5-4)+choose(5,5)*(.8)^5*(.2)^(5-5)
pbinom(2,5,.8,lower.tail=FALSE)
qnorm(.10)
0
qnorm(.975, mean = 3, sd = 2)
1.96*4+3
1.96*2+3
pnorm(1200,mean=1020, sd = 50, lower.tail = FALSE)
pnorm(((1200-1020)/50),lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(.75, mean= 1020, sd = 50)
.53
.53
ppois(3,2.5*4)
pbinom(5,1000,.01)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
.6+c(-qnorm(.975)*sqrt(.6(1-.6)/100),qnorm(.975)*sqrt(.6(1-.6)/100))
.6+c(-qnorm(.975)*sqrt(.6(1-.6)/100),qnorm(.975)*sqrt(.6(1-.6)/100))
.6+c(-1,1)qnorm(.975)*sqrt(.6(1-.6)/100)
.6+c(-1,1)*qnorm(.975)*sqrt(.6(1-.6)/100)
.6c(-1,1)qnorm(.975)*sqrt(.6(1-.6)/100)
.6+c(-1,1)qnorm(.975)*sqrt(.6(1-.6)/100)
.6+c(-1,1)*qnorm(.975)*sqrt(.6(1-.6)/100)
.6-qnorm(.975)*sqrt(.6(1-.6)/100)
.6
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/64.32
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
pnorm(70,mean=80,sd=10)
qnorm(.95,mean=1100,sd=75)
qnorm(.95,mean=1100,sd=75,lower.tail = FALSE)
qnorm(.95,mean=1100,sd=75)
2*75/sqrt(100)
pbinom(4,5)
pbinom(4,5,.5)
pbinom(5,5,.5)
pbinom(4,5,.5,lower.tail = FALSE)
possion.test(15,10)
(16-15)/10
pnorm(0.1)
pnorm(0.1)*2
pnorm(0.1,lower.tail = FALSE)
ppois(10,50)
ppois(10,15)
pbinom(4,5,.5)
2*75/10
pbinom(5,4,.5)
pbinom(1,5,.5)
pbinom(2,5,.5)
